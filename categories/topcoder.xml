<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>yield this (topcoder)</title><link>https://yannpaul.github.io/blog/</link><description></description><atom:link href="https://yannpaul.github.io/blog/categories/topcoder.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Tue, 14 Jul 2015 00:51:38 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Topcoder</title><link>https://yannpaul.github.io/blog/posts/topcoder/</link><dc:creator>yannpaul</dc:creator><description>&lt;p&gt;I've only recently came across &lt;a class="reference external" href="https://www.topcoder.com/community/data-science/data-science-tutorials/"&gt;topcoder&lt;/a&gt;, a site where you can develop your
programming and design skills. They provide a UI to practice coding
and to compete in speed and code-quality challenges. It's a fine
interface, but I'd rather code in my own environment. I've developed a
scaffold that helps me work these
problems out on my on machine. A scaffold-ed project has a CMake
configuration file, a stubbed class to complete the
problem and an executable that drives a series GTest-based tests. The
tests match the examples provided in each problem description. Ideally
I would create a scraper that would pull all the values down from the site
automagically, but for now I populate some of the details
manually. &lt;a class="reference external" href="https://github.com/yannpaul/cookiecutter-gtest"&gt;Take a
look&lt;/a&gt; for yourself.&lt;/p&gt;</description><category>cookiecutter</category><category>gtest</category><category>topcoder</category><guid>https://yannpaul.github.io/blog/posts/topcoder/</guid><pubDate>Mon, 13 Jul 2015 20:50:07 GMT</pubDate></item></channel></rss>